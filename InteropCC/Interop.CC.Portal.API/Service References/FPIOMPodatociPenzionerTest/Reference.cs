//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Interop.CC.Portal.API.FPIOMPodatociPenzionerTest {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InteropFault", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataAccessLibrary")]
    [System.SerializableAttribute()]
    public partial class InteropFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://interop.org/", ConfigurationName="FPIOMPodatociPenzionerTest.IDataForRetired")]
    public interface IDataForRetired {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://interop.org/IDataForRetired/GetDataForRetired", ReplyAction="http://interop.org/IDataForRetired/GetDataForRetiredResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Interop.CC.Portal.API.FPIOMPodatociPenzionerTest.InteropFault), Action="http://interop.org/IDataForRetired/GetDataForRetiredInteropFaultFault", Name="InteropFault", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataAccessLibrary")]
        string GetDataForRetired(string embg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://interop.org/IDataForRetired/GetDataForRetired", ReplyAction="http://interop.org/IDataForRetired/GetDataForRetiredResponse")]
        System.Threading.Tasks.Task<string> GetDataForRetiredAsync(string embg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataForRetiredChannel : Interop.CC.Portal.API.FPIOMPodatociPenzionerTest.IDataForRetired, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataForRetiredClient : System.ServiceModel.ClientBase<Interop.CC.Portal.API.FPIOMPodatociPenzionerTest.IDataForRetired>, Interop.CC.Portal.API.FPIOMPodatociPenzionerTest.IDataForRetired {
        
        public DataForRetiredClient() {
        }
        
        public DataForRetiredClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataForRetiredClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataForRetiredClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataForRetiredClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDataForRetired(string embg) {
            return base.Channel.GetDataForRetired(embg);
        }
        
        public System.Threading.Tasks.Task<string> GetDataForRetiredAsync(string embg) {
            return base.Channel.GetDataForRetiredAsync(embg);
        }
    }
}
