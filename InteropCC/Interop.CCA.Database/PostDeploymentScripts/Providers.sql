GO

--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

MERGE INTO [Providers] AS Target
USING (VALUES
  ('<RSAKeyValue><Modulus>qusbQgzQc9kX7mz98Kvt5zMzUpOMo7+uWsGfuewti2SJFRIQv9Gbl0yELTJZUen2denEUg8Vkh8NZs+AiHKzFrDkaDveaX0f8qHW3+nAhD6UqLHNuHkoQFhcz5e0QOiNXRIBuQ73ylxFBmBnqmLNBAVsuprWD7kEfYoE/k5uHgk=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>','AKN')
 ,('<RSAKeyValue><Modulus>ks+L8kWHiBwiPw4zJcZwIkeGrhNP0fI6LohybpGjNoZSf4bZ1hXrgLiWoklA2QY7CD7hPbW2d1cLVK7VOAYqAtyIdrchG6AVSWg2ul90QT/BgvNFcBqf9xuS3l25t1OimUcj47/hPx2Nu9NMMMpGhqp6PR2pEwjvMAxHgW7BzOM=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>','UJP')
) AS Source ([PublicKey],[RoutingToken])
ON (Target.[RoutingToken] = Source.[RoutingToken])
WHEN MATCHED AND (
	NULLIF(Source.[PublicKey], Target.[PublicKey]) IS NOT NULL OR NULLIF(Target.[PublicKey], Source.[PublicKey]) IS NOT NULL) THEN
 UPDATE SET
  [PublicKey] = Source.[PublicKey]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([PublicKey],[RoutingToken])
 VALUES(Source.[PublicKey],Source.[RoutingToken])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Providers]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Providers] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO