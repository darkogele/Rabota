//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApp.DataExeImpTest {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutedImportInput", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataAccessLibrary.DataForExecut" +
        "edImport")]
    [System.SerializableAttribute()]
    public partial class ExecutedImportInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AmountOfImportFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AmountOfImportTaxFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AmountOfImportTaxToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AmountOfImportToField;
        
        private long EDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MonthOfImportFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MonthOfImportToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearOfImportFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearOfImportToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AmountOfImportFrom {
            get {
                return this.AmountOfImportFromField;
            }
            set {
                if ((this.AmountOfImportFromField.Equals(value) != true)) {
                    this.AmountOfImportFromField = value;
                    this.RaisePropertyChanged("AmountOfImportFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AmountOfImportTaxFrom {
            get {
                return this.AmountOfImportTaxFromField;
            }
            set {
                if ((this.AmountOfImportTaxFromField.Equals(value) != true)) {
                    this.AmountOfImportTaxFromField = value;
                    this.RaisePropertyChanged("AmountOfImportTaxFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AmountOfImportTaxTo {
            get {
                return this.AmountOfImportTaxToField;
            }
            set {
                if ((this.AmountOfImportTaxToField.Equals(value) != true)) {
                    this.AmountOfImportTaxToField = value;
                    this.RaisePropertyChanged("AmountOfImportTaxTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AmountOfImportTo {
            get {
                return this.AmountOfImportToField;
            }
            set {
                if ((this.AmountOfImportToField.Equals(value) != true)) {
                    this.AmountOfImportToField = value;
                    this.RaisePropertyChanged("AmountOfImportTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long EDB {
            get {
                return this.EDBField;
            }
            set {
                if ((this.EDBField.Equals(value) != true)) {
                    this.EDBField = value;
                    this.RaisePropertyChanged("EDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MonthOfImportFrom {
            get {
                return this.MonthOfImportFromField;
            }
            set {
                if ((this.MonthOfImportFromField.Equals(value) != true)) {
                    this.MonthOfImportFromField = value;
                    this.RaisePropertyChanged("MonthOfImportFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MonthOfImportTo {
            get {
                return this.MonthOfImportToField;
            }
            set {
                if ((this.MonthOfImportToField.Equals(value) != true)) {
                    this.MonthOfImportToField = value;
                    this.RaisePropertyChanged("MonthOfImportTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> YearOfImportFrom {
            get {
                return this.YearOfImportFromField;
            }
            set {
                if ((this.YearOfImportFromField.Equals(value) != true)) {
                    this.YearOfImportFromField = value;
                    this.RaisePropertyChanged("YearOfImportFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> YearOfImportTo {
            get {
                return this.YearOfImportToField;
            }
            set {
                if ((this.YearOfImportToField.Equals(value) != true)) {
                    this.YearOfImportToField = value;
                    this.RaisePropertyChanged("YearOfImportTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutedImportOutput", Namespace="http://schemas.datacontract.org/2004/07/Contracts.Models.DataForExecutedImport")]
    [System.SerializableAttribute()]
    public partial class ExecutedImportOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ImportAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ImportTaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDB {
            get {
                return this.EDBField;
            }
            set {
                if ((object.ReferenceEquals(this.EDBField, value) != true)) {
                    this.EDBField = value;
                    this.RaisePropertyChanged("EDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImportAmount {
            get {
                return this.ImportAmountField;
            }
            set {
                if ((this.ImportAmountField.Equals(value) != true)) {
                    this.ImportAmountField = value;
                    this.RaisePropertyChanged("ImportAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportMonth {
            get {
                return this.ImportMonthField;
            }
            set {
                if ((this.ImportMonthField.Equals(value) != true)) {
                    this.ImportMonthField = value;
                    this.RaisePropertyChanged("ImportMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImportTaxAmount {
            get {
                return this.ImportTaxAmountField;
            }
            set {
                if ((this.ImportTaxAmountField.Equals(value) != true)) {
                    this.ImportTaxAmountField = value;
                    this.RaisePropertyChanged("ImportTaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportYear {
            get {
                return this.ImportYearField;
            }
            set {
                if ((this.ImportYearField.Equals(value) != true)) {
                    this.ImportYearField = value;
                    this.RaisePropertyChanged("ImportYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InteropFault", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataAccessLibrary")]
    [System.SerializableAttribute()]
    public partial class InteropFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://interop.org/", ConfigurationName="DataExeImpTest.IDataExeImp")]
    public interface IDataExeImp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://interop.org/IDataExeImp/GetDataExeImp", ReplyAction="http://interop.org/IDataExeImp/GetDataExeImpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApp.DataExeImpTest.InteropFault), Action="http://interop.org/IDataExeImp/GetDataExeImpInteropFaultFault", Name="InteropFault", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataAccessLibrary")]
        TestApp.DataExeImpTest.ExecutedImportOutput[] GetDataExeImp(TestApp.DataExeImpTest.ExecutedImportInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://interop.org/IDataExeImp/GetDataExeImp", ReplyAction="http://interop.org/IDataExeImp/GetDataExeImpResponse")]
        System.Threading.Tasks.Task<TestApp.DataExeImpTest.ExecutedImportOutput[]> GetDataExeImpAsync(TestApp.DataExeImpTest.ExecutedImportInput input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataExeImpChannel : TestApp.DataExeImpTest.IDataExeImp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataExeImpClient : System.ServiceModel.ClientBase<TestApp.DataExeImpTest.IDataExeImp>, TestApp.DataExeImpTest.IDataExeImp {
        
        public DataExeImpClient() {
        }
        
        public DataExeImpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataExeImpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExeImpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExeImpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestApp.DataExeImpTest.ExecutedImportOutput[] GetDataExeImp(TestApp.DataExeImpTest.ExecutedImportInput input) {
            return base.Channel.GetDataExeImp(input);
        }
        
        public System.Threading.Tasks.Task<TestApp.DataExeImpTest.ExecutedImportOutput[]> GetDataExeImpAsync(TestApp.DataExeImpTest.ExecutedImportInput input) {
            return base.Channel.GetDataExeImpAsync(input);
        }
    }
}
