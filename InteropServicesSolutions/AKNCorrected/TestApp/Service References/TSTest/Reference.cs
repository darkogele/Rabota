//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApp.TSTest {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://interop.org/", ConfigurationName="TSTest.ITSTest")]
    public interface ITSTest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://interop.org/ITSTest/GetTSTest", ReplyAction="http://interop.org/ITSTest/GetTSTestResponse")]
        string GetTSTest(string embs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://interop.org/ITSTest/GetTSTest", ReplyAction="http://interop.org/ITSTest/GetTSTestResponse")]
        System.Threading.Tasks.Task<string> GetTSTestAsync(string embs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITSTestChannel : TestApp.TSTest.ITSTest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TSTestClient : System.ServiceModel.ClientBase<TestApp.TSTest.ITSTest>, TestApp.TSTest.ITSTest {
        
        public TSTestClient() {
        }
        
        public TSTestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TSTestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TSTestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TSTestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetTSTest(string embs) {
            return base.Channel.GetTSTest(embs);
        }
        
        public System.Threading.Tasks.Task<string> GetTSTestAsync(string embs) {
            return base.Channel.GetTSTestAsync(embs);
        }
    }
}
