GO

--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

MERGE INTO [AccessMappings] AS Target
USING (VALUES
  ('KIT','BEN','ServiceA','X','','')
 ,('KIT','BEN','ServiceB','X','','')
 ,('KOR','BEN','ServiceA','X','','')
 ,('KOR','BEN','ServiceB','X','','')
 ,('OKP','BEN','ServiceA','X','','')
 ,('TAR','BEN','ServiceA','X','','')
 ,('TAR','BEN','ServiceB','X','','')
 ,('ZDR','BEN','ServiceA','X','','')
 ,('UJP','GEM','ServiceB','X','','')
 ,('ZEM','GEM','ServiceB','X','','')
 ,('KNG','KIT','ServiceA','X','','')
 ,('OKP','KNG','ServiceB','X','','')
 ,('KNG','KOR','ServiceA','X','','')
 ,('KNG','KOR','ServiceB','X','','')
 ,('GEM','MAR','ServiceB','X','','')
 ,('KIT','MAR','ServiceB','X','','')
 ,('KOR','MAR','ServiceA','X','','')
 ,('KOR','MAR','ServiceB','X','','')
 ,('OKP','MAR','ServiceA','X','','')
 ,('TAR','MAR','ServiceA','X','','')
 ,('ZEM','MAR','ServiceB','X','','')
 ,('KIT','MVR','ServiceB','X','','')
 ,('ZDR','MVR','ServiceB','X','','')
 ,('ZEM','MVR','ServiceA','X','','')
 ,('ZEM','MVR','ServiceB','X','','')
 ,('BEN','OKP','ServiceA','X','','')
 ,('KIT','OKP','ServiceA','X','','')
 ,('KOR','OKP','ServiceA','X','','')
 ,('TAR','OKP','ServiceA','X','','')
 ,('UJP','OKP','ServiceB','X','','')
 ,('KIT','TAR','ServiceA','X','','')
 ,('KIT','TAR','ServiceB','X','','')
 ,('UJP','TAR','ServiceA','X','','')
 ,('UJP','TAR','ServiceB','X','','')
 ,('KIT','UJP','ServiceA','X','','')
 ,('KIT','UJP','ServiceB','X','','')
 ,('MVR','UJP','ServiceA','X','','')
 ,('MVR','UJP','ServiceB','X','','')
 ,('OKP','UJP','ServiceA','X','','')
 ,('ZDR','UJP','ServiceB','X','','')
 ,('ZEM','UJP','ServiceB','X','','')
 ,('MAR','ZAG','ServiceA','X','','')
 ,('UJP','ZAG','ServiceA','X','','')
 ,('KIT','ZDR','ServiceA','X','','')
 ,('KIT','ZDR','ServiceB','X','','')
 ,('OKP','ZDR','ServiceA','X','','')
 ,('OKP','ZDR','ServiceB','X','','')
 ,('GEM','ZEM','ServiceA','X','','')
 ,('KIT','ZEM','ServiceB','X','','')
 ,('KOR','ZEM','ServiceA','X','','')
 ,('MVR','ZEM','ServiceA','X','','')
 ,('TAR','ZEM','ServiceA','X','','')
) AS Source ([ProviderCode],[ConsumerCode],[ServiceCode],[MethodCode],[ProviderBusCode],[ConsumerBusCode])
ON (Target.[ConsumerBusCode] = Source.[ConsumerBusCode] AND Target.[ConsumerCode] = Source.[ConsumerCode] AND Target.[MethodCode] = Source.[MethodCode] AND Target.[ProviderBusCode] = Source.[ProviderBusCode] AND Target.[ProviderCode] = Source.[ProviderCode] AND Target.[ServiceCode] = Source.[ServiceCode])
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ProviderCode],[ConsumerCode],[ServiceCode],[MethodCode],[ProviderBusCode],[ConsumerBusCode])
 VALUES(Source.[ProviderCode],Source.[ConsumerCode],Source.[ServiceCode],Source.[MethodCode],Source.[ProviderBusCode],Source.[ConsumerBusCode])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [AccessMappings]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[AccessMappings] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO