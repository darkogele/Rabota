GO

--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

MERGE INTO [Participants] AS Target
USING (VALUES
  ('BEN','BEN','/',1,'PK')
 ,('BENT','BEN','/',1,'PK')
 ,('GEM','GEM','/',0,'PK')
 ,('GEMT','GEM','/',0,'PK')
 ,('KIT','KIT','/',1,'PK')
 ,('KITT','KIT','/',1,'PK')
 ,('KNG','KNG','/',0,'PK')
 ,('KNGT','KNG','/',0,'PK')
 ,('KOR','KOR','/',1,'PK')
 ,('KORT','KOR','/',1,'PK')
 ,('MAR','MAR','/',1,'PK')
 ,('MART','MAR','/',1,'PK')
 ,('MVR','MVR','/',1,'PK')
 ,('MVRT','MVR','/',1,'PK')
 ,('OKP','OKP','/',0,'PK')
 ,('OKPT','OKP','/',0,'PK')
 ,('TAR','TAR','/',0,'PK')
 ,('TART','TAR','/',0,'PK')
 ,('UJP','UJP','/',0,'PK')
 ,('UJPT','UJP','/',0,'PK')
 ,('ZAG','ZAG','/',1,'PK')
 ,('ZAGT','ZAG','/',1,'PK')
 ,('ZDR','ZDR','/',1,'PK')
 ,('ZDRT','ZDR','/',1,'PK')
 ,('ZEM','ZEM','/',0,'PK')
 ,('ZEMT','ZEM','/',0,'PK')
) AS Source ([Code],[Name],[Uri],[IsActive],[PublicKey])
ON (Target.[Code] = Source.[Code])
WHEN MATCHED AND (
	NULLIF(Source.[Name], Target.[Name]) IS NOT NULL OR NULLIF(Target.[Name], Source.[Name]) IS NOT NULL OR 
	NULLIF(Source.[Uri], Target.[Uri]) IS NOT NULL OR NULLIF(Target.[Uri], Source.[Uri]) IS NOT NULL OR 
	NULLIF(Source.[IsActive], Target.[IsActive]) IS NOT NULL OR NULLIF(Target.[IsActive], Source.[IsActive]) IS NOT NULL OR 
	NULLIF(Source.[PublicKey], Target.[PublicKey]) IS NOT NULL OR NULLIF(Target.[PublicKey], Source.[PublicKey]) IS NOT NULL) THEN
 UPDATE SET
  [Name] = Source.[Name], 
  [Uri] = Source.[Uri], 
  [IsActive] = Source.[IsActive], 
  [PublicKey] = Source.[PublicKey]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Code],[Name],[Uri],[IsActive],[PublicKey])
 VALUES(Source.[Code],Source.[Name],Source.[Uri],Source.[IsActive],Source.[PublicKey])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Participants]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Participants] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO