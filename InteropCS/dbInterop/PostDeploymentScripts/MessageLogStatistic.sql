
GO

--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

SET IDENTITY_INSERT [MessageLogStatistic] ON

MERGE INTO [MessageLogStatistic] AS Target
USING (VALUES
  (180,'UJP','','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Request','synchronous','TestPublicKey','EvalService','','2015-10-16T13:53:18.543','2015-10-16T13:53:42.287','','','http://localhost/Interop.CC.Handler.Internal')
 ,(181,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-10-16T13:54:35.363','2015-10-16T13:54:35.387','','','http://localhost/Interop.CC.Handler.Internal')
 ,(182,'UJP','','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Request','synchronous','TestPublicKey','EvalService','','2015-12-11T13:55:06.350','2015-12-11T13:55:09.477','','','http://localhost/Interop.CC.Handler.Internal')
 ,(195,'UJP','','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Request','synchronous','TestPublicKey','EvalService','','2015-10-16T13:53:18.543','2015-10-16T13:53:18.650','','','http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(196,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-10-16T13:54:35.363','2015-10-16T13:54:37.873','','','http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(198,'UJP','','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Request','synchronous','TestPublicKey','EvalService','','2015-12-11T13:55:06.350','2015-12-11T13:55:06.447','','','http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(199,'UJP','AKN','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-12-11T13:55:06.350','2015-12-11T13:55:06.447','','','http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(226,'UJP','','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Request','synchronous','TestPublicKey','EvalService','','2016-10-16T13:53:18.543','2016-10-16T13:53:18.650','','','CS')
 ,(227,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2016-10-16T13:54:35.363','2016-10-16T13:54:37.873','','','CS')
 ,(228,'UJP','','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Request','synchronous','TestPublicKey','EvalService','','2015-03-01T15:32:30.530','2015-03-01T15:32:35.640','','','CS')
 ,(230,'UJP','','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Request','synchronous','TestPublicKey','EvalService','','2015-03-01T15:32:30.530','2015-03-01T15:32:35.640','','','http://localhost/Interop.CC.Handler.Internal')
 ,(231,'UJP','','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Request','synchronous','TestPublicKey','EvalService','','2015-03-01T15:32:30.530','2015-03-01T15:32:35.640','','','http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(232,'UJP','AKN','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-03-01T15:32:30.530','2015-03-01T15:32:35.640','','','http://localhost/Interop.CC.Handler.Internal')
 ,(233,'UJP','AKN','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-03-01T15:32:30.530','2015-03-01T15:32:35.640','','','CS')
 ,(234,'UJP','','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Request','synchronous','TestPublicKey','EvalService','','2015-12-11T13:55:06.350','2015-12-11T13:55:06.447','','','CS')
 ,(235,'MON',NULL,'UJP','EvalService','','8BFCB587-FEC7-4311-9C27-924FF81930A4','Request','synchronous','TextPublicKey','EvalService',NULL,'2015-11-13T00:00:00','2015-11-13T00:00:00',NULL,NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(238,'MON',NULL,'UJP','EvalService',NULL,'8BFCB587-FEC7-4311-9C27-924FF81930A4','Request','synchronous','TextPublicKey','EvalService',NULL,'2015-11-13T00:00:00','2015-11-13T00:00:00',NULL,NULL,'CS')
 ,(239,'UJP',NULL,'MON','EvalService',NULL,'4D07DFAF-3B84-45A8-A2B6-D5E465F4E21D','Request','synchronous','TextPublicKey','EvalService',NULL,'2015-11-13T00:00:00','2015-11-13T00:00:00',NULL,NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(240,'UJP',NULL,'MON','EvalService',NULL,'4D07DFAF-3B84-45A8-A2B6-D5E465F4E21D','Request','synchronous','TextPublicKey','EvalService',NULL,'2015-11-13T00:00:00','2015-11-13T00:00:00',NULL,NULL,'CS')
 ,(241,'UJP','','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Request','synchronous','TestPublicKey','EvalService','','2015-10-16T13:53:18.543','2015-10-16T13:53:42.287','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(242,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-10-16T13:54:35.363','2015-10-16T13:54:35.387','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(243,'UJP','','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Request','synchronous','TestPublicKey','EvalService','','2015-12-11T13:55:06.350','2015-12-11T13:55:09.477','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(244,'UJP','','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Request','synchronous','TestPublicKey','EvalService','','2015-10-16T13:53:18.543','2015-10-16T13:53:18.650','',NULL,'http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(245,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-10-16T13:54:35.363','2015-10-16T13:54:37.873','',NULL,'http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(246,'UJP','','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Request','synchronous','TestPublicKey','EvalService','','2015-12-11T13:55:06.350','2015-12-11T13:55:06.447','',NULL,'http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(247,'UJP','AKN','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-12-11T13:55:06.350','2015-12-11T13:55:06.447','',NULL,'http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(248,'UJP','','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Request','synchronous','TestPublicKey','EvalService','','2015-10-16T13:53:18.543','2015-10-16T13:53:18.650','',NULL,'CS')
 ,(249,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2016-10-16T13:54:35.363','2016-10-16T13:54:37.873','',NULL,'CS')
 ,(250,'UJP','AKN','AKN','EvalService',NULL,'F147756E-F67F-49C5-ABCE-BFC42420CE65','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2016-10-16T13:54:35.363','2016-10-16T13:54:37.873','',NULL,'CS')
 ,(251,'UJP','','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Request','synchronous','TestPublicKey','EvalService','','2015-03-01T13:32:30.530','2015-03-01T13:32:35.640','',NULL,'CS')
 ,(252,'UJP','','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Request','synchronous','TestPublicKey','EvalService','','2015-03-01T13:32:30.530','2015-03-01T13:32:35.640','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(253,'UJP','','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Request','synchronous','TestPublicKey','EvalService','','2015-03-01T13:32:30.530','2015-03-01T13:32:35.640','',NULL,'http://localhost/Interop.CCSimulation.Handler.Internal')
 ,(254,'UJP','AKN','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-03-01T13:32:30.530','2015-03-01T13:32:35.640','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(255,'UJP','AKN','AKN','EvalService',NULL,'3F988A5E-2A69-430D-BDCD-345E0967A8FA','Response','synchronous','TestPublicKey','EvalService','application/soap+xml; charset=utf-8','2015-03-01T13:32:30.530','2015-03-01T13:32:35.640','',NULL,'CS')
 ,(256,'UJP','','AKN','EvalService',NULL,'AF4F92AB-75A5-4EDB-9C1E-AA9D7B58FE46','Request','synchronous','TestPublicKey','EvalService','','2015-12-11T13:55:06.350','2015-12-11T13:55:06.447','',NULL,'CS')
 ,(257,'MON','','UJP','EvalService',NULL,'8BFCB587-FEC7-4311-9C27-924FF81930A4','Request','synchronous','TestPublicKey','EvalService','','2015-11-13T00:00:00','2015-11-13T00:00:00','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(258,'MON','','UJP','EvalService',NULL,'8BFCB587-FEC7-4311-9C27-924FF81930A4','Request','synchronous','TestPublicKey','EvalService','','2015-11-13T00:00:00','2015-11-13T00:00:00','',NULL,'CS')
 ,(259,'UJP','','MON','EvalService',NULL,'4D07DFAF-3B84-45A8-A2B6-D5E465F4E21D','Request','synchronous','TestPublicKey','EvalService','','2015-11-13T00:00:00','2015-11-13T00:00:00','',NULL,'http://localhost/Interop.CC.Handler.Internal')
 ,(260,'UJP','','MON','EvalService',NULL,'4D07DFAF-3B84-45A8-A2B6-D5E465F4E21D','Request','synchronous','TestPublicKey','EvalService','','2015-11-13T00:00:00','2015-11-13T00:00:00','',NULL,'CS')
) AS Source ([Id],[Consumer],[Provider],[RoutingToken],[Service],[ServiceMethod],[TransactionId],[Dir],[CallType],[PublicKey],[Status],[MimeType],[Timestamp],[CreateDate],[Signature],[CorrelationId],[ParticipantUri])
ON (Target.[Id] = Source.[Id])
WHEN MATCHED AND (
	NULLIF(Source.[Consumer], Target.[Consumer]) IS NOT NULL OR NULLIF(Target.[Consumer], Source.[Consumer]) IS NOT NULL OR 
	NULLIF(Source.[Provider], Target.[Provider]) IS NOT NULL OR NULLIF(Target.[Provider], Source.[Provider]) IS NOT NULL OR 
	NULLIF(Source.[RoutingToken], Target.[RoutingToken]) IS NOT NULL OR NULLIF(Target.[RoutingToken], Source.[RoutingToken]) IS NOT NULL OR 
	NULLIF(Source.[Service], Target.[Service]) IS NOT NULL OR NULLIF(Target.[Service], Source.[Service]) IS NOT NULL OR 
	NULLIF(Source.[ServiceMethod], Target.[ServiceMethod]) IS NOT NULL OR NULLIF(Target.[ServiceMethod], Source.[ServiceMethod]) IS NOT NULL OR 
	NULLIF(Source.[TransactionId], Target.[TransactionId]) IS NOT NULL OR NULLIF(Target.[TransactionId], Source.[TransactionId]) IS NOT NULL OR 
	NULLIF(Source.[Dir], Target.[Dir]) IS NOT NULL OR NULLIF(Target.[Dir], Source.[Dir]) IS NOT NULL OR 
	NULLIF(Source.[CallType], Target.[CallType]) IS NOT NULL OR NULLIF(Target.[CallType], Source.[CallType]) IS NOT NULL OR 
	NULLIF(Source.[PublicKey], Target.[PublicKey]) IS NOT NULL OR NULLIF(Target.[PublicKey], Source.[PublicKey]) IS NOT NULL OR 
	NULLIF(Source.[Status], Target.[Status]) IS NOT NULL OR NULLIF(Target.[Status], Source.[Status]) IS NOT NULL OR 
	NULLIF(Source.[MimeType], Target.[MimeType]) IS NOT NULL OR NULLIF(Target.[MimeType], Source.[MimeType]) IS NOT NULL OR 
	NULLIF(Source.[Timestamp], Target.[Timestamp]) IS NOT NULL OR NULLIF(Target.[Timestamp], Source.[Timestamp]) IS NOT NULL OR 
	NULLIF(Source.[CreateDate], Target.[CreateDate]) IS NOT NULL OR NULLIF(Target.[CreateDate], Source.[CreateDate]) IS NOT NULL OR 
	NULLIF(Source.[Signature], Target.[Signature]) IS NOT NULL OR NULLIF(Target.[Signature], Source.[Signature]) IS NOT NULL OR 
	NULLIF(Source.[CorrelationId], Target.[CorrelationId]) IS NOT NULL OR NULLIF(Target.[CorrelationId], Source.[CorrelationId]) IS NOT NULL OR 
	NULLIF(Source.[ParticipantUri], Target.[ParticipantUri]) IS NOT NULL OR NULLIF(Target.[ParticipantUri], Source.[ParticipantUri]) IS NOT NULL) THEN
 UPDATE SET
  [Consumer] = Source.[Consumer], 
  [Provider] = Source.[Provider], 
  [RoutingToken] = Source.[RoutingToken], 
  [Service] = Source.[Service], 
  [ServiceMethod] = Source.[ServiceMethod], 
  [TransactionId] = Source.[TransactionId], 
  [Dir] = Source.[Dir], 
  [CallType] = Source.[CallType], 
  [PublicKey] = Source.[PublicKey], 
  [Status] = Source.[Status], 
  [MimeType] = Source.[MimeType], 
  [Timestamp] = Source.[Timestamp], 
  [CreateDate] = Source.[CreateDate], 
  [Signature] = Source.[Signature], 
  [CorrelationId] = Source.[CorrelationId], 
  [ParticipantUri] = Source.[ParticipantUri]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Consumer],[Provider],[RoutingToken],[Service],[ServiceMethod],[TransactionId],[Dir],[CallType],[PublicKey],[Status],[MimeType],[Timestamp],[CreateDate],[Signature],[CorrelationId],[ParticipantUri])
 VALUES(Source.[Id],Source.[Consumer],Source.[Provider],Source.[RoutingToken],Source.[Service],Source.[ServiceMethod],Source.[TransactionId],Source.[Dir],Source.[CallType],Source.[PublicKey],Source.[Status],Source.[MimeType],Source.[Timestamp],Source.[CreateDate],Source.[Signature],Source.[CorrelationId],Source.[ParticipantUri])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [MessageLogStatistic]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[MessageLogStatistic] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET IDENTITY_INSERT [MessageLogStatistic] OFF
GO
SET NOCOUNT OFF
GO
