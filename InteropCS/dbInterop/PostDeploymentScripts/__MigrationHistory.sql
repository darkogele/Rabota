
GO

--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

MERGE INTO [__MigrationHistory] AS Target
USING (VALUES
  ('201511111031343_initial','Interop.CS.Models.Migrations.Configuration',-759169024,'6.1.3-40302')
) AS Source ([MigrationId],[ContextKey],[Model],[ProductVersion])
ON (Target.[ContextKey] = Source.[ContextKey] AND Target.[MigrationId] = Source.[MigrationId])
WHEN MATCHED AND (
	NULLIF(Source.[Model], Target.[Model]) IS NOT NULL OR NULLIF(Target.[Model], Source.[Model]) IS NOT NULL OR 
	NULLIF(Source.[ProductVersion], Target.[ProductVersion]) IS NOT NULL OR NULLIF(Target.[ProductVersion], Source.[ProductVersion]) IS NOT NULL) THEN
 UPDATE SET
  [Model] = Source.[Model], 
  [ProductVersion] = Source.[ProductVersion]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([MigrationId],[ContextKey],[Model],[ProductVersion])
 VALUES(Source.[MigrationId],Source.[ContextKey],Source.[Model],Source.[ProductVersion])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [__MigrationHistory]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[__MigrationHistory] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO
